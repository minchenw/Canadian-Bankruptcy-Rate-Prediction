knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(lmtest)
library(forecast)
library(vars)
library(tseries)
# Get the data
setwd("/Users/minchenwang/classes/604/project")
df1 <- read.csv("train.csv", header=T)
df2 <- read.csv("test.csv", header=T)
full_ts <- ts(df1$Bankruptcy_Rate, frequency = 12)
n_months <- 36
House_Price_Index <- ts(df1$House_Price_Index[1:(nrow(df1)- n_months)], frequency = 12)
Unemployment_Rate <- ts(df1$Unemployment_Rate[1:(nrow(df1)- n_months)], frequency = 12)
Population <- ts(df1$Population[1:(nrow(df1)- n_months)], frequency = 12)
train <- ts(df1$Bankruptcy_Rate[1:(nrow(df1)- n_months)], frequency = 12)
test <- ts(df1$Bankruptcy_Rate[(nrow(df1)- n_months + 1):nrow(df1)],
frequency = 12, start = nrow(df1)/12 - n_months/12 +1)
plot(train, xlim = c(1,29))
lines(test, col = 'blue')
m1 <- Arima(train, order =c(4,1,5), seasonal =list(order =c(2,0,3), period = 12), lambda = lamda)
lambda <- BoxCox.lambda(train)
train_trans <- (train^lambda-1)/lambda
m1 <- Arima(train, order =c(4,1,5), seasonal =list(order =c(2,0,3), period = 12), lambda = lamda)
m1 <- Arima(train, order =c(4,1,5), seasonal =list(order =c(2,0,3), period = 12), lambda =lambda)
m1 <- Arima(train, order =c(4,1,5), seasonal =list(order =c(2,0,3), period = 12), lambda =lambda, method = 'CSS')
f1 <- forecast(m1, h=n_months)
accuracy(f1,test)
par(mfrow=c(3,1))
ccf(train_trans, Unemployment_Rate)
ccf(train_trans, Population)
ccf(train_trans, House_Price_Index)
m2 <- Arima(train, order =c(4,1,5), seasonal =list(order =c(2,0,3), period = 12), lambda =lambda, method = 'CSS', xreg = data.frame(House_Price_Index, Population))
f2 <- forecast(m2, h=n_months)
summary(m2)
forecast(m2, h=n_months)
n_months <- 36
df1_train <- ts(df1[1:(nrow(df1)- n_months)], frequency = 12)
df1[1:(nrow(df1)- n_months)]
n_months <- 36
df1_train <- ts(df1[1:(nrow(df1)- n_months),], frequency = 12)
df1_test <- ts(df1[(nrow(df1)- n_months + 1):nrow(df1),], frequency = 12]
n_months <- 36
df1_train <- ts(df1[1:(nrow(df1)- n_months),], frequency = 12)
df1_test <- ts(df1[(nrow(df1)- n_months + 1):nrow(df1),], frequency = 12)
train <- ts(df1$Bankruptcy_Rate[1:(nrow(df1)- n_months)], frequency = 12)
test <- ts(df1$Bankruptcy_Rate[(nrow(df1)- n_months + 1):nrow(df1)],
frequency = 12, start = nrow(df1)/12 - n_months/12 +1)
plot(train, xlim = c(1,29))
lines(test, col = 'blue')
df1_train
par(mfrow=c(3,1))
ccf(train_trans, df1_train$Unemployment_Rate)
n_months <- 36
df1_train <- df1[1:(nrow(df1)- n_months),]
df1_test <- df1[(nrow(df1)- n_months + 1):nrow(df1),]
train <- ts(df1_train$Bankruptcy_Rate, frequency = 12)
test <- ts(df1_test$Bankruptcy_Rate,frequency = 12, start = nrow(df1)/12 - n_months/12 +1)
Unemployment_Rate <- ts(df1_train$Bankruptcy_Rate, frequency = 12)
Population <- ts(df1_train$Population, frequency = 12)
House_Price_Index <- ts(df1_train$House_Price_Index, frequency = 12)
plot(train, xlim = c(1,29))
lines(test, col = 'blue')
lambda <- BoxCox.lambda(train)
train_trans <- (train^lambda-1)/lambda
print(ndiffs(train_trans))
print(ndiffs(train_trans,m=12))
# differencing once
dtrain_trans <- diff(train_trans)
# differencing for monthly seasonality
dtrain_trans.12 <- diff(dtrain_trans, lag=12)
# check the stationary
adf.test(dtrain_trans.12)
plot(dtrain_trans.12)
par(mfrow=c(3,1))
ccf(train_trans, df1_train$Unemployment_Rate)
par(mfrow=c(3,1))
ccf(train_trans, Unemployment_Rate)
ccf(train_trans, Population)
ccf(train_trans, House_Price_Index)
Unemployment_Rate
par(mfrow=c(2,1))
acf(dtrain_trans.12, lag=72)
pacf(dtrain_trans.12, lag=72)
m1 <- Arima(train, order =c(4,1,5), seasonal =list(order =c(2,0,3), period = 12), lambda =lambda, method = 'CSS')
f1 <- forecast(m1, h=n_months)
f1 <- forecast(m1, h=n_months)
accuracy(f1,test)
m2 <- Arima(train, order =c(4,1,5), seasonal =list(order =c(2,0,3), period = 12), lambda =lambda, method = 'CSS', xreg = data.frame(House_Price_Index, Population, Unemployment_Rate))
f2 <- forecast(m2, h=n_months,xreg = data.frame(Unemployment_Rate = df1_test$Unemployment_Rate, Population = df1_test$Population, House_Price_Index = df1$House_Price_Index))
forecast(m2, h=n_months,xreg = data.frame(Unemployment_Rate = df1_test$Unemployment_Rate, Population = df1_test$Population, House_Price_Index = df1$House_Price_Index))
f2 <- forecast(m2, h=n_months,xreg = data.frame(Unemployment_Rate = df1_test$Unemployment_Rate, Population = df1_test$Population, House_Price_Index = df1_test$House_Price_Index))
accuracy(f2,test)
5.019610e+04
plot(f2)
plot(f2)
plot(m2)
